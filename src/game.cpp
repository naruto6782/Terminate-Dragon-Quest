#include <iostream>
#include "game.h"
#include "Hero_and_Monster.h"
#include <cstdlib>
#include <chrono>
#include <thread>
#include <string>
#include <vector>
#include <algorithm>

const std::string RED     = "\033[31m";
const std::string GREEN   = "\033[32m";
const std::string YELLOW  = "\033[33m";
const std::string BLUE    = "\033[34m";
const std::string MAGENTA = "\033[35m";
const std::string CYAN    = "\033[36m";
const std::string DARK_RED = "\033[38;5;88m";
const std::string FIRE     = "\033[38;5;202m";
const std::string RESET   = "\033[0m";
const std::string CLEAR    = "\033[2J\033[H"; 

void Game::init(Game* game){
    std::cout << "游戏已启动!" << std::endl;
    std::cout << "按任意键继续..." << std::endl;
    getchar();
    system("cls");
    game->menu1(game);
}

void Game::menu1(Game* game){
    std::cout << "请做出你的选择:" << std::endl << "1.新的开始" << std::endl << "2.加载游戏" << std::endl << "3.退出游戏" << std::endl;
    int choice;
    std::cin >> choice;
    switch(choice){
        case 1:
            system("cls");
            game->start();
            break;
        case 2:
            game->load();
            break;
        case 3:
            break;
        default:
            std::cout << "迷途的羔羊啊，请重新选择。" << std::endl;
            getchar();
            getchar();
            game->menu1(game);
        };
}

void Game::menu2(Hero* hero){//after name
    std::cout << "请选择你的路途" << std::endl
     << "1.Ability" << std::endl << "2.Items" << std::endl << "3.Adventure" << std::endl
     << "4.Challenges" << std::endl << "5.Shop" << std::endl << "6.Exit" << std::endl;
    int choice;
    std::cin >> choice;
    switch(choice){ 
        case 1:
            system("cls");
            hero->show_info(hero);
        }
}

void printWithDelay(const std::string& text, int delayMs = 50, const std::string& color = RESET) {
    std::cout << color;
    for (char c : text) {
        std::cout << c << std::flush;
        std::this_thread::sleep_for(std::chrono::milliseconds(delayMs));
    }
    std::cout << RESET;  // 输出后重置颜色
}

void sleep(int ms) {
    std::this_thread::sleep_for(std::chrono::milliseconds(ms));
}

void printLineByLine(const std::vector<std::string>& lines, int delayMs = 300, const std::vector<int>& redLines = {}, const std::vector<int>& yellowLines = {}) {
    for (size_t i = 0; i < lines.size(); ++i) {
        if (std::find(redLines.begin(), redLines.end(), i) != redLines.end()) {
            std::cout << RED << lines[i] << RESET << std::endl;
        }
        else if(std::find(yellowLines.begin(), yellowLines.end(), i) != yellowLines.end()) {
            std::cout << YELLOW << lines[i] << RESET << std::endl;
        }
        
         else {
            std::cout << lines[i] << std::endl;
        }
        std::this_thread::sleep_for(std::chrono::milliseconds(delayMs));
    }
}

void Game::start(){
    std::vector<std::string> asciiScene = {
"⠤⢁⠄⠀⠀⠀⠀⠈⠙⠛⠷⣦⡄⡀⠀⠀⠀⠀⠀⠀⠤⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠀⠀⢀⣴⠟⠁⠀⠀",
"⣶⢦⣦⣤⣤⣤⣤⣤⣄⣀⣀⣀⣉⠛⠳⣔⣤⡀⠀⠀⠀⣿⠆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣇⡀⣠⡿⠋⣀⣴⠶⠛",
"⠠⠀⠀⠀⠀⠀⠈⠀⠀⠀⠉⠈⠉⠉⠉⢛⣻⣿⣷⣶⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢙⣿⣿⣿⡟⣛⠁⠀⠀⠀",
"⢂⠡⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣤⡴⠾⠛⠉⣹⣿⣿⣿⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⣀⣀⣤⣤⣤⣶⣶⢶⣤⣀⣀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⢯⣍⠙⠛⠛⠛⠛",
"⠀⠄⠀⠀⠀⠀⢀⣀⣤⡼⠿⠟⠃⠀⠀⠀⣠⡿⢻⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⣿⠿⠿⢿⢻⣿⣿⢿⣿⢿⣼⣿⡀⠀⠀⠀⠀⠀⠀⠀⢿⣿⠀⠘⢿⣄⠀⠀⠀",
"⠈⢄⣶⣶⣶⠿⠟⠋⠉⠀⠀⠀⠀⠀⠀⣼⠟⠅⢸⣿⡏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣤⣾⢷⡯⢗⣻⡖⠓⢒⣃⣤⣄⣠⣾⣿⡇⠀⠀⠀⠀⠀⠀⠀⣿⣿⠀⠀⠀⠙⢻⣦⡄",
"⣼⡿⠟⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⣾⠃⠰⠀⣿⣿⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡺⣻⣯⣿⣙⣾⡟⢸⠺⣿⣿⣿⡟⢉⠏⠉⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡄⠀⠀⠀⠀⠙⢿",
"⢡⠀⠄⠀⢀⠀⠀⠀⠀⠀⠀⠀⣴⡿⠁⠀⠀⢰⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢼⣇⠎⣸⢣⡟⢃⣏⣓⢷⡹⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⡇⠀⠀⠄⠀⠀⠌",
"⢢⢉⠄⠃⢄⠀⠂⠀⠀⠀⠀⣼⡟⠁⠀⠀⠀⣾⣿⣽⠨⠀⡀⠀⠀⠀⠀⠀⠀⠀⠠⢿⠀⠁⣇⠊⠠⢞⠋⠉⠉⠑⣽⢿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣿⡄⠀⠀⡜⢠⡉⠖",
"⠥⣊⠌⡅⢢⠈⢅⠂⠄⠂⣸⡿⢁⠀⠤⠀⠀⣿⣿⠇⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⣿⣁⡆⡟⠀⠀⢲⠀⠀⠀⠀⠈⠪⠾⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⡤⣿⣿⠂⡀⡐⣌⠣⡜⣩",
"⢒⡡⢊⠴⣁⠚⣄⠊⠤⣡⣿⠁⠆⡈⠔⠀⠀⣿⣿⢇⠀⠀⠀⠀⠀⠑⠀⠀⠀⠀⠈⢙⣏⣴⠹⡠⢀⠠⠐⠠⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡐⠤⡑⣌⠳⣜⡵",
"⢢⠘⣌⠲⢌⡓⡌⣍⢲⡿⡡⢎⡐⠬⠀⠐⠀⣿⣯⢧⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠹⣖⡆⠈⠢⡢⠀⠀⠈⠐⢄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⣾⡿⣿⢀⠧⣑⠮⣝⢮⣳",
"⢀⢉⡀⢷⡈⢶⢱⣈⣿⢇⡱⢆⡸⠆⠀⠁⠀⣿⣏⢿⠀⠀⠀⠀⠀⠀⠆⠀⠀⠀⠀⠀⠀⠈⢿⣇⠁⣀⠆⠆⠀⠀⠀⠰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣾⣿⡇⡎⢶⣉⡾⣹⡾⢷",
"⢈⠢⡘⢆⡙⣆⢧⣿⣏⠞⣔⠣⡜⢡⠂⡁⠀⢿⣿⣟⡀⠄⠂⠀⠀⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠙⠻⣬⠦⠀⢄⠀⠀⠀⠀⠢⠀⠀⠀⠀⠀⠀⠀⢰⣟⣾⡿⢱⡘⢦⡻⣼⣳⢟⡿",
"⠀⢢⠑⡎⣵⢪⣿⣟⣬⢻⣌⠷⣌⢣⡘⠀⠀⢸⣿⣿⡷⣈⠁⠈⠀⠐⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⣮⠠⡵⠀⠀⠀⠀⢁⠀⠀⠀⠀⢀⠴⢋⣿⢻⢃⠧⣜⢧⣟⣳⢯⣿⠙",
"⠀⢢⡙⡜⣶⣻⣟⡾⣼⢳⣎⢷⣊⢦⡙⠤⠀⣼⣿⣿⣿⣦⡑⠀⠄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣷⣷⡀⠀⠀⠀⠘⠀⠀⢀⠴⡁⣰⠞⣿⣿⢘⢮⡝⣾⡽⣫⠟⠁⠀",
"⠀⢥⢪⢵⣣⣿⣻⢾⣽⣳⣻⢮⣝⡮⡵⣉⢦⣿⡿⠀⠈⠙⠻⢷⣦⣀⡅⢠⠐⠠⠄⣀⠀⣠⠄⠢⠂⠝⠋⢻⣿⡒⠠⠄⣀⠀⢐⠆⠂⠐⣴⠟⠉⠀⣿⣏⢞⣮⣽⣳⡟⠁⠀⠀⠀",
"⠣⣎⢮⣳⣿⣻⣽⣻⣞⡷⣯⣟⡾⣵⡳⣕⣾⣿⠃⡄⠀⠀⠀⠀⠈⠉⠛⠿⢶⣥⣴⣠⡞⠀⠂⠀⣥⠈⡁⡢⠗⣀⠠⠀⡀⠀⢸⢘⡼⠟⠁⠀⢠⠌⣿⣏⡾⣮⢷⡛⠁⠀⠀⠀⠀",
"⠀⠻⣮⢷⣿⣳⢯⡷⣯⣟⡷⣯⣟⣷⣻⢞⣿⢧⣋⠴⡩⢔⢢⡐⡀⠄⡀⢀⠀⣤⣾⢻⠄⠒⡉⠐⡬⠐⠈⠊⡀⠀⠡⠁⠒⠐⠻⣨⠇⣠⢂⡍⢦⡙⣿⣯⢷⣯⡟⠀⠀⠀⠀⠀⠀",
"⠀⠀⢫⣿⢷⣯⠿⠙⠓⠯⣟⣷⣻⢾⣽⣻⣟⣳⣎⢷⣙⣎⢦⡱⣍⣶⡷⣞⢿⣛⣬⡻⡌⠡⡀⣷⠇⠁⢀⠀⠈⠂⢁⣐⡀⡼⢨⢈⡗⣦⢳⡜⣧⣻⣽⣯⣟⡞⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⢺⣿⠋⠀⠀⠀⠀⠀⠘⣷⣯⣿⣾⣿⣽⢳⡞⣯⣾⣼⢣⣷⣾⣯⣷⠛⡏⢹⡌⡆⢱⣤⡞⡍⠈⡄⠀⠑⡄⠈⡄⠀⠀⠀⢸⡌⢹⡞⣧⡟⣷⢻⣾⢳⣯⠃⠀⠀⠀⠀⠀⠀⠀",
"⠀⢀⡿⠉⠀⠀⠀⠀⠀⠀⠀⣿⣞⡷⣿⣯⣟⣯⢿⡽⣞⣧⣿⡿⣫⣿⢶⣎⣳⡼⣷⢿⠛⢡⠀⠱⡀⢈⠢⡀⢈⠠⠐⠀⠀⠈⣟⠁⣼⡿⣽⣻⣽⣻⢾⣟⡏⠀⠀⠀⠀⠀⠀⠀⠀",
"⠀⠸⠁⠀⠀⠀⠀⠀⠀⠀⠀⢸⣯⢿⣟⣾⡽⣞⣯⢿⡽⣞⣯⣿⣟⣯⣿⡿⠿⡽⢃⠁⢃⠀⠳⠀⡑⢄⠀⠉⠐⠠⠤⠄⠐⣸⢧⣾⢿⣽⣳⣟⡾⣽⣻⣟⠀⠀⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⢀⠂⠀⠀⠀⠀⢸⣯⣿⣟⡾⣽⣻⣞⣯⢿⡽⣿⣻⡿⣾⣿⣵⢐⢳⡘⡄⠘⡂⠄⡑⢄⠠⠑⠪⠄⢀⠀⢀⣾⣽⣻⣞⡿⣞⡷⣯⣟⣷⣻⡝⠀⠀⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠈⠀⠀⠀⠈⠀⠀⣼⣻⣷⢯⡿⣽⣳⣟⡾⣯⣟⡷⣯⢿⡿⡟⣿⠘⡴⡅⠘⢄⠐⠠⢀⡂⢈⠐⢠⣐⣤⣾⣟⡽⣞⡷⣯⢿⣽⣻⢷⣻⢾⣽⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀",
};
    std::vector<std::string> asciiHero = {                                                                 
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⣶⣿⣿⣿⣶⣦⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡄⠀⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⣠⣿⣿⣿⢟⣭⣴⣶⡦⠍⠛⣿⣿⣿⣿⣿⠇⠀⠀⠀⠀⠀⠀⠀",
"⠈⠳⣶⣤⣤⣶⣿⠿⢫⣾⣿⣿⠋⠀⠀⠀⠀⢸⣿⡟⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⠈⠉⠉⠉⠁⣰⣿⣿⣿⠇⠀⢀⣀⣤⣴⣾⣧⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⢠⣿⣿⣿⡟⢠⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⣠⣿⣿⣿⡟⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡀⠀⠀⠀⠀",
"⠀⠀⢀⣠⣶⣿⣿⡿⠋⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⠀⠀⠀⠀",
"⠉⠛⠛⠛⠛⠛⠉⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⣛⣥⣶⣆⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⠏⣥⣤⡙⢟⣫⡴⠿⠿⠿⠷⠿⣷⡀⠀",
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⡜⢿⡿⢃⣌⢻⣟⠛⠻⠶⠶⢶⣾⣿⡄",
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⡄⣾⣿⣿⣷⡝⢿⣷⣶⣶⣦⡾⠟⠁",
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣟⣛⣻⠿⠿⢧⢹⣿⣿⣿⣿⣦⡙⢷⡶⠋⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣴⣝⠻⣿⣿⣛⠷⠌⢿⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣿⣮⣝⠻⣿⣶⣦⣤⣉⠛⠿⢿⠁⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⠰⣾⣿⣿⣿⣿⣿⣿⣿⣿⣶⣭⣛⠿⢿⣧⢷⣤⡀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠛⠛⠿⣿⣿⣿⣿⣷⡦⠉⢿⣿⡷⠦⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠻⡿⠋⠀⠀⠈⠀⠀⠀⠀  ",                                                                                                                          
};
    std::vector<std::string> asciiSword = {
"⣿⣿⣇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⡆",
"⠉⠹⣿⣷⣀⠀⠀⠀⠀⢰⣶⡤⠀⢤⣴⡶⠀⠀⠀⠀⢀⣼⣿⠟⠉⠁",
"⠀⠀⠈⠻⣿⣦⣄⠀⢀⣼⡟⠓⠀⠘⠛⣷⣄⠀⢀⣴⣿⡿⠁⠀⠀⠀",
"⠀⠀⠀⠀⠙⢿⣿⣶⣿⠉⠀⠀⠀⠀⠀⠈⢻⣷⣿⡿⠋⠀⠀⠀⠀⠀",
"⠀⢀⡀⢀⣠⡾⠿⡹⢆⠠⡀⠀⠀⠀⢀⠔⣡⠞⡹⢷⡄⡀⢀⡀⠀⠀",
"⠀⠸⡯⣿⠛⠁⠀⠀⢈⠲⣌⠢⡀⡠⣡⠞⡡⠊⠀⠀⠛⣿⢿⡛⠀⠀",
"⠀⠀⠁⠀⠀⠀⠀⠀⠀⠑⢌⡱⢊⡴⢃⠌⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀",
"⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠜⠔⢋⢔⠑⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⠀⠀⡐⡡⢂⠔⠉⠢⡙⢌⠢⡀⠀⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⠀⠀⡠⠊⠈⡠⠀⠀⠀⠀⠈⠢⡁⠌⢆⠀⠀⠀⠀⠀⠀⠀",
"⠀⠀⠀⠀⢀⠔⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠈⠢⡀⠑⠄⠀⠀⠀⠀⠀",
"⠀⠀⠀⡠⠀⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠠⡈⢢⠀⠀⠀⠀",
"⠀⠀⣔⡠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠢⡡⡀⠀⠀",
"⠀⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠀⠀",
};
    std::vector<std::string> asciiLogo = {
"( ___ )-------------------------------------------------------------------------------------( ___ )",
" |   |                                                                                       |   | ",
" |   |  ███████████                                     ███                       ████       |   | ",
" |   | ░█░░░███░░░█                                    ░░░                       ░░███       |   | ",
" |   | ░   ░███  ░   ██████  ████████  █████████████   ████  ████████    ██████   ░███       |   | ",
" |   |     ░███     ███░░███░░███░░███░░███░░███░░███ ░░███ ░░███░░███  ░░░░░███  ░███       |   | ",
" |   |     ░███    ░███████  ░███ ░░░  ░███ ░███ ░███  ░███  ░███ ░███   ███████  ░███       |   | ",
" |   |     ░███    ░███░░░   ░███      ░███ ░███ ░███  ░███  ░███ ░███  ███░░███  ░███       |   | ",
" |   |     █████   ░░██████  █████     █████░███ █████ █████ ████ █████░░████████ █████      |   | ",
" |   |    ░░░░░     ░░░░░░  ░░░░░     ░░░░░ ░░░ ░░░░░ ░░░░░ ░░░░ ░░░░░  ░░░░░░░░ ░░░░░       |   | ",
" |   |              ██████████                                                               |   | ",
" |   |             ░░███░░░░███                                                              |   | ",
" |   |              ░███   ░░███ ████████   ██████    ███████  ██████  ████████              |   | ",
" |   |              ░███    ░███░░███░░███ ░░░░░███  ███░░███ ███░░███░░███░░███             |   | ",
" |   |              ░███    ░███ ░███ ░░░   ███████ ░███ ░███░███ ░███ ░███ ░███             |   | ",
" |   |              ░███    ███  ░███      ███░░███ ░███ ░███░███ ░███ ░███ ░███             |   | ",
" |   |              ██████████   █████    ░░████████░░███████░░██████  ████ █████            |   | ",
" |   |             ░░░░░░░░░░   ░░░░░      ░░░░░░░░  ░░░░░███ ░░░░░░  ░░░░ ░░░░░             |   | ",
" |   |                                               ███ ░███                                |   | ",
" |   |                    ██████                    ░░██████     █████                       |   | ",
" |   |                  ███░░░░███                   ░░░░░░     ░░███                        |   | ",
" |   |                 ███    ░░███ █████ ████  ██████   █████  ███████                      |   | ",
" |   |                ░███     ░███░░███ ░███  ███░░███ ███░░  ░░░███░                       |   | ",
" |   |                ░███   ██░███ ░███ ░███ ░███████ ░░█████   ░███                        |   | ",
" |   |                ░░███ ░░████  ░███ ░███ ░███░░░   ░░░░███  ░███ ███                    |   | ",
" |   |                 ░░░██████░██ ░░████████░░██████  ██████   ░░█████                     |   | ",
" |   |                   ░░░░░░ ░░   ░░░░░░░░  ░░░░░░  ░░░░░░     ░░░░░                      |   | ",
" |___|                                                                                       |___| ",
"(_____)-------------------------------------------------------------------------------------(_____)",
};
   // 设置哪些行显示为红色（龙的部分）
    std::vector<int> redLines = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27};
    std::vector<int> yellowLines = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};
    std::vector<int> rdLines = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28};
    std::vector<int> blLines = {};

    printLineByLine(asciiScene, 40, redLines);
 
    std::string intro1 =
    "在遥远的阿斯兰大陆，七块神圣水晶维系着大地的平衡。它们封印着古老的混沌之力，使世界维持秩序与和平。\n" 
    "然而某日，第七水晶突然崩碎，深埋于大地的黑暗被唤醒。那是被世人遗忘的邪龙———奈克托斯，一个曾在千年前几乎摧毁世界的存在。\n"
    "浓雾蔓延，亡灵苏醒，王国各地陷入混乱。在神殿的最后祷告中，星语者留下了唯一的预言：\n"
    "“唯有掌光之印记者，可再聚七晶，封锁深渊。”\n";
    std::string intro2 = 
    "清晨，偏远村庄艾尔村迎来平静的一天。在村外的一棵老树下，你正在回忆往昔。你不记得自己的父母，只知道自己是被村里的老人收养，从小过着平凡而安静的生活。\n"
    "但今天，一切将改变。\n"
    "阳光照在你手背上，一道奇异的光芒浮现。那是古老的圣印，是千年来从未出现过的象征。\n"
    "与此同时，一柄被称为“黎明之锋”的圣剑，被王国骑士带至村庄。\n"
    "只有真正的勇者，才能使其发光。\n"
    "在众人注视下，剑在你手中闪耀。你，就是被预言选中的人。\n"
    "“告吾汝名，勇者。”\n";
    printWithDelay(intro1, 30, CYAN); //1
    cout << "按任意键继续..." << endl;
    getchar();
    getchar();
    system("cls");
    printLineByLine(asciiHero, 40, yellowLines);
    printWithDelay(intro2, 30, CYAN);//2
    std::cout << "请输入你的名字：";
    std::string name;
    cin >> name;
    getchar();
    system("cls");
    printLineByLine(asciiSword, 40, yellowLines);
    std::string intro3 = 
    "“如此甚好，" + name + "。汝之命运，当由此展开。”\n"
    "提汝圣剑，踏上征途。汝乃天命之子。\n";
    std::string intro4 = 
    "旅程今始。勇者终将屠龙。\n";
    printWithDelay(intro3, 30, CYAN);//3
    printWithDelay(intro4, 30, CYAN);
    cout << "\n" << endl;
    cout << "按下任意键继续..." << endl;
    getchar();
    system("cls");
    printLineByLine(asciiLogo, 40, rdLines);//logo
    sleep(10);
    system("cls");
    Hero hero(name,100,10,10,10,30);
    menu2(&hero);
}




